package com.genpact.model.impl;

import com.genpact.model.TalendProcess;
import com.genpact.model.TalendProcessModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the TalendProcess service. Represents a row in the &quot;talend_TalendProcess&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.genpact.model.TalendProcessModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TalendProcessImpl}.
 * </p>
 *
 * @author 710008328
 * @see TalendProcessImpl
 * @see com.genpact.model.TalendProcess
 * @see com.genpact.model.TalendProcessModel
 * @generated
 */
public class TalendProcessModelImpl extends BaseModelImpl<TalendProcess>
    implements TalendProcessModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a talend process model instance should use the {@link com.genpact.model.TalendProcess} interface instead.
     */
    public static final String TABLE_NAME = "talend_TalendProcess";
    public static final Object[][] TABLE_COLUMNS = {
            { "processId", Types.BIGINT },
            { "createDate", Types.TIMESTAMP },
            { "modifiedDate", Types.TIMESTAMP },
            { "name", Types.VARCHAR },
            { "version", Types.VARCHAR },
            { "className", Types.VARCHAR },
            { "fileEntryId", Types.BIGINT },
            { "description", Types.VARCHAR },
            { "context", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table talend_TalendProcess (processId LONG not null primary key,createDate DATE null,modifiedDate DATE null,name VARCHAR(75) null,version VARCHAR(75) null,className VARCHAR(75) null,fileEntryId LONG,description VARCHAR(75) null,context VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table talend_TalendProcess";
    public static final String ORDER_BY_JPQL = " ORDER BY talendProcess.processId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY talend_TalendProcess.processId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.genpact.model.TalendProcess"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.genpact.model.TalendProcess"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.genpact.model.TalendProcess"));
    private static ClassLoader _classLoader = TalendProcess.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            TalendProcess.class
        };
    private long _processId;
    private Date _createDate;
    private Date _modifiedDate;
    private String _name;
    private String _version;
    private String _className;
    private long _fileEntryId;
    private String _description;
    private String _context;
    private TalendProcess _escapedModel;

    public TalendProcessModelImpl() {
    }

    @Override
    public long getPrimaryKey() {
        return _processId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setProcessId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _processId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return TalendProcess.class;
    }

    @Override
    public String getModelClassName() {
        return TalendProcess.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("processId", getProcessId());
        attributes.put("createDate", getCreateDate());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("name", getName());
        attributes.put("version", getVersion());
        attributes.put("className", getClassName());
        attributes.put("fileEntryId", getFileEntryId());
        attributes.put("description", getDescription());
        attributes.put("context", getContext());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long processId = (Long) attributes.get("processId");

        if (processId != null) {
            setProcessId(processId);
        }

        Date createDate = (Date) attributes.get("createDate");

        if (createDate != null) {
            setCreateDate(createDate);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String name = (String) attributes.get("name");

        if (name != null) {
            setName(name);
        }

        String version = (String) attributes.get("version");

        if (version != null) {
            setVersion(version);
        }

        String className = (String) attributes.get("className");

        if (className != null) {
            setClassName(className);
        }

        Long fileEntryId = (Long) attributes.get("fileEntryId");

        if (fileEntryId != null) {
            setFileEntryId(fileEntryId);
        }

        String description = (String) attributes.get("description");

        if (description != null) {
            setDescription(description);
        }

        String context = (String) attributes.get("context");

        if (context != null) {
            setContext(context);
        }
    }

    @Override
    public long getProcessId() {
        return _processId;
    }

    @Override
    public void setProcessId(long processId) {
        _processId = processId;
    }

    @Override
    public Date getCreateDate() {
        return _createDate;
    }

    @Override
    public void setCreateDate(Date createDate) {
        _createDate = createDate;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public String getName() {
        if (_name == null) {
            return StringPool.BLANK;
        } else {
            return _name;
        }
    }

    @Override
    public void setName(String name) {
        _name = name;
    }

    @Override
    public String getVersion() {
        if (_version == null) {
            return StringPool.BLANK;
        } else {
            return _version;
        }
    }

    @Override
    public void setVersion(String version) {
        _version = version;
    }

    @Override
    public String getClassName() {
        if (_className == null) {
            return StringPool.BLANK;
        } else {
            return _className;
        }
    }

    @Override
    public void setClassName(String className) {
        _className = className;
    }

    @Override
    public long getFileEntryId() {
        return _fileEntryId;
    }

    @Override
    public void setFileEntryId(long fileEntryId) {
        _fileEntryId = fileEntryId;
    }

    @Override
    public String getDescription() {
        if (_description == null) {
            return StringPool.BLANK;
        } else {
            return _description;
        }
    }

    @Override
    public void setDescription(String description) {
        _description = description;
    }

    @Override
    public String getContext() {
        if (_context == null) {
            return StringPool.BLANK;
        } else {
            return _context;
        }
    }

    @Override
    public void setContext(String context) {
        _context = context;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            TalendProcess.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public TalendProcess toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (TalendProcess) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        TalendProcessImpl talendProcessImpl = new TalendProcessImpl();

        talendProcessImpl.setProcessId(getProcessId());
        talendProcessImpl.setCreateDate(getCreateDate());
        talendProcessImpl.setModifiedDate(getModifiedDate());
        talendProcessImpl.setName(getName());
        talendProcessImpl.setVersion(getVersion());
        talendProcessImpl.setClassName(getClassName());
        talendProcessImpl.setFileEntryId(getFileEntryId());
        talendProcessImpl.setDescription(getDescription());
        talendProcessImpl.setContext(getContext());

        talendProcessImpl.resetOriginalValues();

        return talendProcessImpl;
    }

    @Override
    public int compareTo(TalendProcess talendProcess) {
        long primaryKey = talendProcess.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof TalendProcess)) {
            return false;
        }

        TalendProcess talendProcess = (TalendProcess) obj;

        long primaryKey = talendProcess.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<TalendProcess> toCacheModel() {
        TalendProcessCacheModel talendProcessCacheModel = new TalendProcessCacheModel();

        talendProcessCacheModel.processId = getProcessId();

        Date createDate = getCreateDate();

        if (createDate != null) {
            talendProcessCacheModel.createDate = createDate.getTime();
        } else {
            talendProcessCacheModel.createDate = Long.MIN_VALUE;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            talendProcessCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            talendProcessCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        talendProcessCacheModel.name = getName();

        String name = talendProcessCacheModel.name;

        if ((name != null) && (name.length() == 0)) {
            talendProcessCacheModel.name = null;
        }

        talendProcessCacheModel.version = getVersion();

        String version = talendProcessCacheModel.version;

        if ((version != null) && (version.length() == 0)) {
            talendProcessCacheModel.version = null;
        }

        talendProcessCacheModel.className = getClassName();

        String className = talendProcessCacheModel.className;

        if ((className != null) && (className.length() == 0)) {
            talendProcessCacheModel.className = null;
        }

        talendProcessCacheModel.fileEntryId = getFileEntryId();

        talendProcessCacheModel.description = getDescription();

        String description = talendProcessCacheModel.description;

        if ((description != null) && (description.length() == 0)) {
            talendProcessCacheModel.description = null;
        }

        talendProcessCacheModel.context = getContext();

        String context = talendProcessCacheModel.context;

        if ((context != null) && (context.length() == 0)) {
            talendProcessCacheModel.context = null;
        }

        return talendProcessCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(19);

        sb.append("{processId=");
        sb.append(getProcessId());
        sb.append(", createDate=");
        sb.append(getCreateDate());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", name=");
        sb.append(getName());
        sb.append(", version=");
        sb.append(getVersion());
        sb.append(", className=");
        sb.append(getClassName());
        sb.append(", fileEntryId=");
        sb.append(getFileEntryId());
        sb.append(", description=");
        sb.append(getDescription());
        sb.append(", context=");
        sb.append(getContext());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(31);

        sb.append("<model><model-name>");
        sb.append("com.genpact.model.TalendProcess");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>processId</column-name><column-value><![CDATA[");
        sb.append(getProcessId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createDate</column-name><column-value><![CDATA[");
        sb.append(getCreateDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>name</column-name><column-value><![CDATA[");
        sb.append(getName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>version</column-name><column-value><![CDATA[");
        sb.append(getVersion());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>className</column-name><column-value><![CDATA[");
        sb.append(getClassName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>fileEntryId</column-name><column-value><![CDATA[");
        sb.append(getFileEntryId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>description</column-name><column-value><![CDATA[");
        sb.append(getDescription());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>context</column-name><column-value><![CDATA[");
        sb.append(getContext());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
